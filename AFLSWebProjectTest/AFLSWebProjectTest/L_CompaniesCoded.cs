//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AFLSWebProjectTest
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    [DeploymentItem("License_12001.lic")]
    public class L_CompaniesCoded : WebTest
    {

        public L_CompaniesCoded()
        {
            this.Context.Add("Url", "http://localhost");
            this.Context.Add("Instance", "/AFLS/");
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Inicializar reglas de validación aplicables a todas las solicitudes de prueba web
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest((this.Context["Url"].ToString() + this.Context["Instance"].ToString()));
            request1.ExpectedResponseUrl = (this.Context["Url"].ToString()
                        + (this.Context["Instance"].ToString() + "LogOn"));
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest((this.Context["Url"].ToString()
                            + (this.Context["Instance"].ToString() + "Account/LogOn")));
            request2.Method = "POST";
            request2.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request2.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request2.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["Url"].ToString()
                                + (this.Context["Instance"].ToString() + "LogOn"))));
            StringHttpBody request2Body = new StringHttpBody();
            request2Body.ContentType = "application/json";
            request2Body.InsertByteOrderMark = false;
            request2Body.BodyString = "{\"DefaultAuth\":\"ARANDA\",\"UserName\":\"administrator\",\"Password\":\"ABC123\",\"RememberM" +
                "e\":\"true\"}";
            request2.Body = request2Body;
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest((this.Context["Url"].ToString()
                            + (this.Context["Instance"].ToString() + "Companies/Save")));
            request3.Method = "POST";
            request3.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request3.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request3.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["Url"].ToString() + this.Context["Instance"].ToString())));
            StringHttpBody request3Body = new StringHttpBody();
            request3Body.ContentType = "application/json";
            request3Body.InsertByteOrderMark = false;
            request3Body.BodyString = "{\"Name\":\"Dynamic Networks WT\",\"ContactName\":\"\",\"ContactEmail\":\"\",\"Address\":\"\",\"Co" +
                "ntactPhone\":\"\",\"IsActive\":true,\"selected\":true,\"UniqueReference\":\"77777777777\",\"" +
                "Longitude\":null,\"Latitude\":null,\"CompanyServices\":[],\"AdditionalFields\":[]}";
            request3.Body = request3Body;
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest((this.Context["Url"].ToString()
                            + (this.Context["Instance"].ToString() + "Companies/Save")));
            request4.Method = "POST";
            request4.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request4.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request4.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["Url"].ToString() + this.Context["Instance"].ToString())));
            StringHttpBody request4Body = new StringHttpBody();
            request4Body.ContentType = "application/json";
            request4Body.InsertByteOrderMark = false;
            request4Body.BodyString = "{\"Name\":\"Core Records WT\",\"ContactName\":\"\",\"ContactEmail\":\"\",\"Address\":\"\",\"Contac" +
                "tPhone\":\"\",\"IsActive\":true,\"selected\":true,\"UniqueReference\":\"8904837789-2\",\"Lon" +
                "gitude\":null,\"Latitude\":null,\"CompanyServices\":[],\"AdditionalFields\":[]}";
            request4.Body = request4Body;
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest((this.Context["Url"].ToString()
                            + (this.Context["Instance"].ToString() + "Companies/Save")));
            request5.Method = "POST";
            request5.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request5.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request5.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["Url"].ToString() + this.Context["Instance"].ToString())));
            StringHttpBody request5Body = new StringHttpBody();
            request5Body.ContentType = "application/json";
            request5Body.InsertByteOrderMark = false;
            request5Body.BodyString = "{\"Name\":\"Neroductions WT\",\"ContactName\":\"\",\"ContactEmail\":\"\",\"Address\":\"\",\"Contac" +
                "tPhone\":\"\",\"IsActive\":true,\"selected\":true,\"UniqueReference\":\"8966737000-2\",\"Lon" +
                "gitude\":null,\"Latitude\":null,\"CompanyServices\":[],\"AdditionalFields\":[]}";
            request5.Body = request5Body;
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest((this.Context["Url"].ToString()
                            + (this.Context["Instance"].ToString() + "Companies/Save")));
            request6.Method = "POST";
            request6.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request6.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request6.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["Url"].ToString() + this.Context["Instance"].ToString())));
            StringHttpBody request6Body = new StringHttpBody();
            request6Body.ContentType = "application/json";
            request6Body.InsertByteOrderMark = false;
            request6Body.BodyString = "{\"Name\":\"Riddlectronics WT\",\"ContactName\":\"\",\"ContactEmail\":\"\",\"Address\":\"\",\"Cont" +
                "actPhone\":\"\",\"IsActive\":true,\"selected\":true,\"UniqueReference\":\"9006759003-3\",\"L" +
                "ongitude\":null,\"Latitude\":null,\"CompanyServices\":[],\"AdditionalFields\":[]}";
            request6.Body = request6Body;
            yield return request6;
            request6 = null;

            // AdditionalFieldsOrders
            this.AddCommentToResult("AdditionalFieldsOrders");

            WebTestRequest request7 = new WebTestRequest((this.Context["Url"].ToString()
                            + (this.Context["Instance"].ToString() + "additionalfields/")));
            request7.Method = "POST";
            request7.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request7.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["Url"].ToString() + this.Context["Instance"].ToString())));
            StringHttpBody request7Body = new StringHttpBody();
            request7Body.ContentType = "application/json";
            request7Body.InsertByteOrderMark = false;
            request7Body.BodyString = "{\"ApplicationId\":34,\"Concept\":34005,\"Fields\":[{\"Order\":1,\"Status\":1,\"selected\":fa" +
                "lse,\"TypeId\":1,\"Options\":[],\"Label\":\"Nombre orden\",\"HelpMessage\":\"Ayuda: Nombre " +
                "orden\",\"State\":\"add\",\"Name\":\"ca-nombre orden-1\",\"Description\":\"\",\"Permissions\":[" +
                "{\"Name\":\"General\",\"Roles\":[{\"Actions\":{\"View\":true,\"Edit\":true,\"Required\":false}" +
                ",\"Id\":34002,\"Name\":\"AFLS_Mobil\"},{\"Actions\":{\"View\":true,\"Edit\":true,\"Required\":" +
                "false},\"Id\":34003,\"Name\":\"AFLS_Dispatcher\"},{\"Actions\":{\"View\":true,\"Edit\":true," +
                "\"Required\":false},\"Id\":34005,\"Name\":\"AFLS_Monitor\"}],\"StatusId\":7}]},{\"Order\":2," +
                "\"Status\":1,\"selected\":false,\"TypeId\":5,\"Options\":[],\"Label\":\"Descripción orden\"," +
                "\"HelpMessage\":\"Ayuda: Descripción orden\",\"State\":\"add\",\"Name\":\"ca-descripción or" +
                "den-2\",\"Description\":\"\",\"Permissions\":[{\"Name\":\"General\",\"Roles\":[{\"Actions\":{\"V" +
                "iew\":true,\"Edit\":true,\"Required\":false},\"Id\":34002,\"Name\":\"AFLS_Mobil\"},{\"Action" +
                "s\":{\"View\":true,\"Edit\":true,\"Required\":false},\"Id\":34003,\"Name\":\"AFLS_Dispatcher" +
                "\"},{\"Actions\":{\"View\":true,\"Edit\":true,\"Required\":false},\"Id\":34005,\"Name\":\"AFLS" +
                "_Monitor\"}],\"StatusId\":7}]},{\"Order\":3,\"Status\":1,\"selected\":false,\"TypeId\":2,\"O" +
                "ptions\":[],\"Label\":\"Numero Orden\",\"HelpMessage\":\"Ayuda: Información numerica\",\"S" +
                "tate\":\"add\",\"Name\":\"ca-numero orden-3\",\"Description\":\"\",\"Permissions\":[{\"Name\":\"" +
                "General\",\"Roles\":[{\"Actions\":{\"View\":true,\"Edit\":true,\"Required\":false},\"Id\":340" +
                "02,\"Name\":\"AFLS_Mobil\"},{\"Actions\":{\"View\":true,\"Edit\":true,\"Required\":false},\"I" +
                "d\":34003,\"Name\":\"AFLS_Dispatcher\"},{\"Actions\":{\"View\":true,\"Edit\":true,\"Required" +
                "\":false},\"Id\":34005,\"Name\":\"AFLS_Monitor\"}],\"StatusId\":7}]},{\"Order\":4,\"Status\":" +
                "1,\"selected\":false,\"TypeId\":3,\"Options\":[],\"Label\":\"Fecha orden\",\"HelpMessage\":\"" +
                "Ayuda: fecha orden\",\"State\":\"add\",\"Name\":\"ca-fecha orden-4\",\"Description\":\"\",\"Pe" +
                "rmissions\":[{\"Name\":\"General\",\"Roles\":[{\"Actions\":{\"View\":true,\"Edit\":true,\"Requ" +
                "ired\":false},\"Id\":34002,\"Name\":\"AFLS_Mobil\"},{\"Actions\":{\"View\":true,\"Edit\":true" +
                ",\"Required\":false},\"Id\":34003,\"Name\":\"AFLS_Dispatcher\"},{\"Actions\":{\"View\":true," +
                "\"Edit\":true,\"Required\":false},\"Id\":34005,\"Name\":\"AFLS_Monitor\"}],\"StatusId\":7}]}" +
                ",{\"Order\":5,\"Status\":1,\"selected\":false,\"TypeId\":4,\"Options\":[{\"Id\":null,\"Value\"" +
                ":\"Instalación\",\"Order\":1},{\"Id\":null,\"Value\":\"Reparación\",\"Order\":2},{\"Id\":null," +
                "\"Value\":\"Soporte\",\"Order\":3},{\"Id\":null,\"Value\":\"Revisión\",\"Order\":4},{\"Id\":null" +
                ",\"Value\":\"Supervisión de especialista en campo\",\"Order\":5},{\"Id\":null,\"Value\":\"V" +
                "iaje con origen y destino\",\"Order\":6},{\"Id\":null,\"Value\":\"Atención en sitio de c" +
                "liente\",\"Order\":7}],\"Label\":\"Listado Orden\",\"HelpMessage\":\"Ayuda: Seleccione tip" +
                "o de servicio\",\"State\":\"add\",\"Name\":\"ca-listado orden-5\",\"Description\":\"\",\"Permi" +
                "ssions\":[{\"Name\":\"General\",\"Roles\":[{\"Actions\":{\"View\":true,\"Edit\":true,\"Require" +
                "d\":false},\"Id\":34002,\"Name\":\"AFLS_Mobil\"},{\"Actions\":{\"View\":true,\"Edit\":true,\"R" +
                "equired\":false},\"Id\":34003,\"Name\":\"AFLS_Dispatcher\"},{\"Actions\":{\"View\":true,\"Ed" +
                "it\":true,\"Required\":false},\"Id\":34005,\"Name\":\"AFLS_Monitor\"}],\"StatusId\":7}]}],\"" +
                "Project\":1}";
            request7.Body = request7Body;
            yield return request7;
            request7 = null;
        }
    }
}
